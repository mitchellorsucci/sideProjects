/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xil_io.h"
#include <sleep.h>
#include "xgpio.h"

#define KEYS		0x41200000
#define SWITCHES	0x41200008
#define LEDS		0x41210000
#define RGBS		0x41210008
#define PMODA		0x41220000
#define PMODB		0x41220008

XGpio inputs, leds, pmods;
int main(){
    init_platform();
    XGpio_Initialize(&inputs, XPAR_GPIO_0_DEVICE_ID);
    XGpio_Initialize(&leds, XPAR_GPIO_1_DEVICE_ID);
    XGpio_Initialize(&pmods, XPAR_GPIO_2_DEVICE_ID);

    XGpio_SetDataDirection(&inputs, 1, 0xF); // Set Keys to inputs
    XGpio_SetDataDirection(&inputs, 2, 0x3); // Set switches to inputs
    XGpio_SetDataDirection(&leds, 1, 0x0);	// Set LEDS to outputs
    XGpio_SetDataDirection(&leds, 2, 0x00);	// Set RGBS to outputs
    XGpio_SetDataDirection(&pmods, 1, 0x00);	// Set PMODA to outputs
    XGpio_SetDataDirection(&pmods, 2, 0x00);	// Set PMODB to outputs
    Xil_Out8(LEDS, 0x0);
    Xil_Out8(RGBS, 0x00);
    Xil_Out8(PMODA, 0x00);
    Xil_Out8(PMODB, 0x00);
    while(1) {
//    	Xil_Out8(RGBS, 0x2A);
//    	Xil_Out8(PMODA, 0xAA);
//    	Xil_Out8(LEDS, 0xA);
//    	usleep(150000);
//    	Xil_Out8(RGBS, 0x15);
//    	Xil_Out8(PMODA, 0x55);
//    	Xil_Out8(LEDS, 0x5);
//    	usleep(50000);
    	u8 sw = Xil_In8(SWITCHES);
    	if (sw) {
    		for(int i = 0; i < 9; i++) {
    			Xil_Out8(PMODA, 1 << i);
    			for(int j = 0; j < 5; j++) {
    				Xil_Out8(LEDS, 1 << j);
    				usleep(50000);
    			}
    			printf("%d\n\r", i);
//    			usleep(75000);
    		}
    	} else {
    		for(int i = 0; i < 9; i++) {
    			Xil_Out8(PMODA, 1 << i);
    			for(int j = 0; j < 5; j++) {
    				Xil_Out8(LEDS, 1 << j);
    				usleep(50000);
    			}
    			printf("%d\n\r", i);
//    			usleep(75000);
    	}
    	}
    }

    print("Hello World\n\r");

    cleanup_platform();
    return 0;
}
